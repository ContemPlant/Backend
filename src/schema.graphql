# import Plant, SensorDates, Ardu, ArduSubscriptionPayload, SensorDatesSubscriptionPayload, PlantSubscriptionPayload from "./generated/prisma.graphql"

type Query {
    info: String!
    plants: [Plant!]!
    plant(id: ID!): Plant
}

type AuthPayload {
    token: String
    user: User
}

type User {
  id: ID!
  email: String!
  username: String!
  plants: [Plant!]!
}

input createPlantInput {
    name: String!
    temperature_opt: Float!
    temperature_weight: Float!
    radiation_opt: Float!
    radiation_weight: Float!
    humidity_opt: Float!
    humidity_weight: Float!
    loudness_opt: Float!
    loudness_weight: Float!
}

input addSensorDatesInput {
    timeStamp: DateTime!
    temperatureValue: Float!
    radiationValue: Float!
    humidityValue: Float!
    loudnessValue: Float!
    arduId: String!
}

type Mutation {
    signup(username: String!, email: String!, password: String!): AuthPayload
    login(email: String!, password: String!): AuthPayload
    createPlant(input: createPlantInput!): Plant
    addSensorDates(input: addSensorDatesInput!): SensorDates!
    loadPlantOnArdu(arduId: String!, plantId: ID!): Ardu
    unloadPlantFromArdu(arduId: String!): Ardu
    unloadPlant(plantId: ID!): Ardu
}

type Subscription {
    arduChange: ArduSubscriptionPayload
    newSensorDates(plantId: ID!): SensorDatesSubscriptionPayload
    newPlant: PlantSubscriptionPayload
}